on:
  # this is the workflow for verification in branches. it doesn't do deploys
  push:
    paths:
      - "tools/**/*"
      - ".github/workflows/tools.yaml"
      - "build-packages"
    branches:
      - "*"
    tags:
      - "tools@*"
  workflow_dispatch:

jobs:
  python_check:
    runs-on: 'ubuntu-latest'
    name: "Check python"
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-python@v4'
        with:
          python-version: '3.10'
      - name: 'Set up poetry'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry self add "poethepoet[poetry_plugin]"
      - name: 'Prep for running commands'
        run: |
          cd tools
          poetry install
      - name: 'Lint'
        run: |
          cd tools
          poetry poe lint
      - name: 'Test'
        run: |
          cd tools
          poetry poe test
  container_build_check:
    runs-on: 'ubuntu-latest'
    name: 'Check container build'
    needs: [python_check]
    permissions:
      packages: write
      contents: read
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-python@v4'
        with:
          python-version: '3.10'
      - name: 'Build the container'
        id: container-build
        run: |
          ./build-packages --prep-container-only --container-source=build --verbose
      - name: "Deploy the container to :main"
        id: container-deploy-main
        if: ${{github.ref == 'refs/heads/main'}}
        run: |
          docker images
          package_name=`docker images -q ghcr.io/opentrons/python-package-builder:latest`
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker image tag $package_name ghcr.io/opentrons/python-package-builder:main
          docker image push ghcr.io/opentrons/python-package-builder:main
      - name: "Deploy the container to :dev"
        id: container-deploy-dev
        if: ${{startsWith(github.ref, 'refs/heads/') && github.ref != 'refs/heads/main'}}
        run: |
          docker images
          package_name=`docker images -q ghcr.io/opentrons/python-package-builder:latest`
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker image tag $package_name ghcr.io/opentrons/python-package-builder:dev
          docker image push ghcr.io/opentrons/python-package-builder:dev

      - name: "Deploy the container to a tagged version"
        id: container-deploy-versioned
        if: startsWith(github.ref, 'refs/tags/tools')
        run: |
          docker images
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u --password-stdin
          docker image push --all-tags ghcr.io/opentrons/python-package-builder
  package_build_check:
    runs-on: 'ubuntu-latest'
    name: 'Check package build'
    needs: [python_check]
    outputs:
      target-url: steps.set-url.outputs.target-url
    steps:
      - id: set-url
        run: |
          echo "::set-output name=target-url::https://dev.pypi.opentrons.com"
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-python@v4'
        with:
          python-version: '3.10'
      - name: 'Run the build'
        run: |
          ./build-packages --container-source=build --verbose --index-root-url=${{steps.set-url.outputs.target-url}}/${{github.ref_name}}
      - name: 'Upload artifacts to temporary storage'
        uses: 'actions/upload-artifact@v4'
        with:
          name: "package-dist"
          path: "dist/**/*"
      - name: "Upload index to temporary storage"
        uses: 'actions/upload-artifact@v4'
        with:
          name: 'package-index'
          path: index/**/*
  deploy-to-dev:
    runs-on: 'ubuntu-latest'
    name: 'deploy to dev'
    needs: package_build_check
    permissions:
      id-token: write
      contents: read
    environment:
      name: dev
      url: ${{needs.package_build_check.outputs.target-url}}
    steps:
      - name: fetch artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'package-index'
          path: './index'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::699250785121:role/githubuser_role-dev
          aws-region: us-east-1
      - name: upload web contents
        run: aws s3 sync ./index s3://dev.pypi.opentrons.com/${{github.ref_name}}
